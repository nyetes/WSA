{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\portfolio\\\\src\\\\pages\\\\Portfolio.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport Multi from '../components/Mutli';\nimport Header from '../components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TICKERS = {\n  \"FB\": \"Facebook\",\n  \"NFLX\": \"Netflix\",\n  \"KO\": \"CocoaCola\",\n  \"SPG\": \"Simon Property Group\",\n  \"WWE\": \"World Wrestling Entertainment\",\n  \"AAPL\": \"Apple\",\n  \"IBM\": \"IBM\",\n  \"NKE\": \"Nike\",\n  \"GOOGL\": \"Google\",\n  \"TSLA\": \"Tesla\"\n}; //Data for DoughnutChart\n\nconst data = {\n  labels: Object.entries(TICKERS).map(([key, value]) => key),\n  datasets: [{\n    label: '# of Stocks',\n    data: Array(10).fill(10),\n    backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n    borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n    borderWidth: 1\n  }]\n};\n\nfunction Portfolio() {\n  _s();\n\n  const [risks, setRisks] = useState();\n  const [portRisk, setPortRisk] = useState();\n  const [diverseRisk, setDiverseRisk] = useState();\n  useEffect(() => {\n    axios.get('http://localhost:8000/stocks/portfolio').then(res => {\n      console.log('res', res.data.risks);\n      setRisks(res.data.risks);\n      setPortRisk(res.data.portRisk);\n      setDiverseRisk(res.data.diverseRisk);\n    });\n  }, []);\n\n  const showRow = data => {\n    return Object.entries(data).map(([key, value]) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          class: \"Title\",\n          children: TICKERS[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          class: \"Title\",\n          children: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          class: \"Percentage\",\n          children: [(value * 100).toFixed(4), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 22\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 20\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"about-portfolio\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"portfolio\",\n        children: [/*#__PURE__*/_jsxDEV(Doughnut, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), \"Portfolio risk = \", portRisk || 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"about-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Why Optimal Portfolios?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            class: \"tablecontent\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Stock\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Ticker\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Risk\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 9\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: risks && showRow(risks)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 1\n      }, this), risks && /*#__PURE__*/_jsxDEV(Multi, {\n        labels: Object.entries(risks).map(([key, value]) => key),\n        barData: Object.entries(risks).map(([key, value]) => value),\n        lineData: diverseRisk\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Portfolio, \"N1mra6bewEkPk1DI1jvdE35aX3U=\");\n\n_c = Portfolio;\nexport default Portfolio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/portfolio/src/pages/Portfolio.js"],"names":["axios","React","useState","useEffect","Doughnut","Multi","Header","TICKERS","data","labels","Object","entries","map","key","value","datasets","label","Array","fill","backgroundColor","borderColor","borderWidth","Portfolio","risks","setRisks","portRisk","setPortRisk","diverseRisk","setDiverseRisk","get","then","res","console","log","showRow","toFixed"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React,{useState,useEffect} from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport Multi from '../components/Mutli';\nimport Header from '../components/Header' ;\n\n\nconst TICKERS ={\"FB\":\"Facebook\",\"NFLX\":\"Netflix\",\"KO\":\"CocoaCola\",\"SPG\":\"Simon Property Group\",\"WWE\":\"World Wrestling Entertainment\",\n\"AAPL\":\"Apple\",\"IBM\":\"IBM\",\"NKE\":\"Nike\",\"GOOGL\":\"Google\",\"TSLA\":\"Tesla\"};\n\n\n\n//Data for DoughnutChart\nconst data = {\n    labels: Object.entries(TICKERS).map(([key, value]) => key),\n    datasets: [\n      {\n        label: '# of Stocks',\n        data: Array(10).fill(10),\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(255, 206, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n          'rgba(153, 102, 255, 0.2)',\n          'rgba(255, 159, 64, 0.2)',\n        ],\n        borderColor: [\n          'rgba(255, 99, 132, 1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(255, 206, 86, 1)',\n          'rgba(75, 192, 192, 1)',\n          'rgba(153, 102, 255, 1)',\n          'rgba(255, 159, 64, 1)',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\nfunction Portfolio() {\n    const [risks,setRisks] = useState();\n    const [portRisk,setPortRisk] = useState();\n    const [diverseRisk,setDiverseRisk] = useState();\n    useEffect(()=>{\n        axios.get('http://localhost:8000/stocks/portfolio').then(res=>{\n            console.log('res',res.data.risks);\n            setRisks(res.data.risks);\n            setPortRisk(res.data.portRisk);\n            setDiverseRisk(res.data.diverseRisk)\n        })\n    },[])\n    const showRow = data=>{\n        return Object.entries(data).map(([key, value]) => {\n          return   <tr key={key}>\n                    <td class=\"Title\">{TICKERS[key]}</td>\n                    <td class=\"Title\">{key}</td>\n                     <td class=\"Percentage\">{(value*100).toFixed(4)}%</td>\n                </tr>\n        })\n    }\n    return(\n        <>\n        <Header/>\n         <section class=\"about-portfolio\">\n         <div class=\"portfolio\">\n                {/* <img src=\"images/risks.png\"/> */}\n                <Doughnut data={data}/>\n                Portfolio risk = {portRisk || 0}\n            </div>\n\n</section>\n<section>\n\n\n<div class=\"row\">\n\n<div class=\"about-col\">\n    <h1>Why Optimal Portfolios?</h1>\n    {/* Table goes here */}\n    <table class=\"tablecontent\">\n<thead>\n    <tr>\n        <th>Stock</th>\n        <th>Ticker</th>\n        <th>Risk</th>\n    </tr>\n</thead>\n<tbody>\n    {risks && showRow(risks)}\n</tbody>\n\n</table>\n    \n</div>\n</div>   \n{   \nrisks &&\n<Multi \n    labels={Object.entries(risks).map(([key, value]) => key)}\n    barData ={Object.entries(risks).map(([key, value]) =>value)}\n    lineData = {diverseRisk}\n/> }\n    </section>\n        </>\n    );\n}\n  \n\n  export default Portfolio;"]},"metadata":{},"sourceType":"module"}