{"ast":null,"code":"var _jsxFileName = \"/Users/l/Desktop/my/Portfolio/src/components/Polar.js\";\nimport React from 'react';\nimport { PolarArea } from 'react-chartjs-2';\nimport { Stocks } from '../Stocks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst data = {\n  labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n  datasets: [{\n    label: '# of Votes',\n    data: [12, 19, 3, 5, 2, 3],\n    backgroundColor: ['rgba(255, 99, 132, 0.5)', 'rgba(54, 162, 235, 0.5)', 'rgba(255, 206, 86, 0.5)', 'rgba(75, 192, 192, 0.5)', 'rgba(153, 102, 255, 0.5)', 'rgba(255, 159, 64, 0.5)'],\n    borderWidth: 1\n  }]\n};\n\nconst Polar = ({\n  success,\n  data,\n  tickers\n}) => {\n  console.log('stocks%%%%', Stocks['AAPL'].color);\n  console.log('ticker', tickers);\n\n  if (!success) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Your Expectation is not Practical.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Polar Area Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PolarArea, {\n      data: {\n        labels: Object.entries(data).map(([key, value]) => key),\n        datasets: [{\n          label: '# of Votes',\n          data: Object.entries(data).map(([key, value]) => value.toFixed(4) * 100),\n          backgroundColor: tickers.map(tick => Stocks[tick].color),\n          borderWidth: 1\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Polar;\nexport default Polar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Polar\");","map":{"version":3,"sources":["/Users/l/Desktop/my/Portfolio/src/components/Polar.js"],"names":["React","PolarArea","Stocks","data","labels","datasets","label","backgroundColor","borderWidth","Polar","success","tickers","console","log","color","Object","entries","map","key","value","toFixed","tick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAAQC,MAAR,QAAqB,WAArB;;;AACA,MAAMC,IAAI,GAAG;AACXC,EAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,EAA0B,OAA1B,EAAmC,QAAnC,EAA6C,QAA7C,CADG;AAEXC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,YADT;AAEEH,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAFR;AAGEI,IAAAA,eAAe,EAAE,CACf,yBADe,EAEf,yBAFe,EAGf,yBAHe,EAIf,yBAJe,EAKf,0BALe,EAMf,yBANe,CAHnB;AAWEC,IAAAA,WAAW,EAAE;AAXf,GADQ;AAFC,CAAb;;AAmBA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUP,EAAAA,IAAV;AAAeQ,EAAAA;AAAf,CAAD,KAA6B;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBX,MAAM,CAAC,MAAD,CAAN,CAAeY,KAAxC;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBF,OAArB;;AACA,MAAG,CAACD,OAAJ,EAAY;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBAES;AAAA,4BACD;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,eAEH,QAAC,SAAD;AAAW,MAAA,IAAI,EACX;AACEN,QAAAA,MAAM,EAAEW,MAAM,CAACC,OAAP,CAAeb,IAAf,EAAqBc,GAArB,CAAyB,CAAC,CAACC,GAAD,EAAKC,KAAL,CAAD,KAAgBD,GAAzC,CADV;AAEEb,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,YADT;AAEEH,UAAAA,IAAI,EAAEY,MAAM,CAACC,OAAP,CAAeb,IAAf,EAAqBc,GAArB,CAAyB,CAAC,CAACC,GAAD,EAAKC,KAAL,CAAD,KAAiBA,KAAK,CAACC,OAAN,CAAc,CAAd,CAAD,GAAmB,GAA5D,CAFR;AAGEb,UAAAA,eAAe,EAAEI,OAAO,CAACM,GAAR,CAAYI,IAAI,IAAEnB,MAAM,CAACmB,IAAD,CAAN,CAAaP,KAA/B,CAHnB;AAIEN,UAAAA,WAAW,EAAE;AAJf,SADQ;AAFZ;AADJ;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA,kBAFT;AAmBH,CAzBD;;KAAMC,K;AA6BN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { PolarArea } from 'react-chartjs-2';\nimport {Stocks} from '../Stocks';\nconst data = {\n  labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n  datasets: [\n    {\n      label: '# of Votes',\n      data: [12, 19, 3, 5, 2, 3],\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.5)',\n        'rgba(54, 162, 235, 0.5)',\n        'rgba(255, 206, 86, 0.5)',\n        'rgba(75, 192, 192, 0.5)',\n        'rgba(153, 102, 255, 0.5)',\n        'rgba(255, 159, 64, 0.5)',\n      ],\n      borderWidth: 1,\n    },\n  ],\n};\n\nconst Polar = ({success, data,tickers}) => {\n    console.log('stocks%%%%',Stocks['AAPL'].color)\n    console.log('ticker',tickers)\n    if(!success){\n        return <div>Your Expectation is not Practical.</div>\n    }\n    return(\n        \n             <>\n            <h1 className='title'>Polar Area Chart</h1>\n          <PolarArea data={\n              {\n                labels: Object.entries(data).map(([key,value])=> key),\n                datasets: [\n                  {\n                    label: '# of Votes',\n                    data: Object.entries(data).map(([key,value])=> (value.toFixed(4))*100),\n                    backgroundColor: tickers.map(tick=>Stocks[tick].color),\n                    borderWidth: 1,\n                  },\n                ],\n              }\n          } />\n        </>\n    );\n}\n    \n\n\nexport default Polar;"]},"metadata":{},"sourceType":"module"}