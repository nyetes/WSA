{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\portfolio\\\\src\\\\pages\\\\Optimize.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Formik, Form, Field, validateYupSchema } from 'formik';\nimport axios from 'axios';\nimport Checkbox from '../components/Checkbox';\nimport Polar from '../components/Polar';\nimport Header from '../components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TextField({\n  field,\n  form: {\n    touched,\n    error\n  },\n  ...props\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Enter your Gain expectation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"amount\",\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_c = TextField;\n\nfunction validateTarget(value) {\n  let error;\n\n  if (!value || value < 1.0) {\n    error = 'Please add your target expectation. Target Expectation must be greater than 1%';\n  }\n\n  return error;\n}\n\nconst Optimize = () => {\n  _s();\n\n  const [response, setReponse] = useState();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select Investment Stock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"optimization-container\",\n      children: [/*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          stock: [],\n          target: ''\n        },\n        onSubmit: async values => {\n          var payload = {\n            stocks: values.stock,\n            target: values.target / 100\n          };\n          axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n          axios.post('http://localhost:8000/portfolio/optimize', payload).then(function (response) {\n            console.log(response);\n            setReponse(response.data);\n          }).catch(function (error) {\n            console.log(error);\n          });\n        },\n        validate: values => {\n          let errors = {};\n\n          if (values.stock.length < 2) {\n            errors.stock = \"Select at least 2 Stocks\";\n          }\n\n          return errors;\n        },\n        children: ({\n          values,\n          errors\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"optimization-container\",\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              type: \"checkbox\",\n              name: \"stock\",\n              value: \"GOOGL\",\n              image: \"google.svg\",\n              label: \"Google\",\n              component: Checkbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"checkbox\",\n              name: \"stock\",\n              value: \"TSLA\",\n              image: \"tesla.svg\",\n              label: \"Tesla\",\n              component: Checkbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"checkbox\",\n              name: \"stock\",\n              value: \"AAPL\",\n              image: \"apple.svg\",\n              label: \"Apple\",\n              component: Checkbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"checkbox\",\n              name: \"stock\",\n              value: \"KO\",\n              image: \"cocacola.svg\",\n              label: \"CocaCola\",\n              component: Checkbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"checkbox\",\n              name: \"stock\",\n              value: \"FB\",\n              image: \"facebook.svg\",\n              label: \"Facebook\",\n              component: Checkbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"checkbox\",\n              name: \"stock\",\n              value: \"SPG\",\n              image: \"SPG.svg\",\n              label: \"Simon Property\",\n              component: Checkbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"checkbox\",\n              name: \"stock\",\n              value: \"NKE\",\n              image: \"nike.svg\",\n              label: \"Nike\",\n              component: Checkbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"checkbox\",\n              name: \"stock\",\n              value: \"NFLX\",\n              image: \"netflix.svg\",\n              label: \"Netflix\",\n              component: Checkbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"checkbox\",\n              name: \"stock\",\n              value: \"WWE\",\n              image: \"wwe.svg\",\n              label: \"World Wrestling\",\n              component: Checkbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"checkbox\",\n              name: \"stock\",\n              value: \"IBM\",\n              image: \"ibm.svg\",\n              label: \"IBM\",\n              component: Checkbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \" Gain Expectation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"containeritems\",\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                type: \"number\",\n                name: \"target\",\n                component: TextField,\n                validate: validateTarget\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                class: \"hero-btn red-btn\",\n                children: \"Optimizer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), errors.target && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: \"color:blue\",\n              children: errors.target\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), errors.stock && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: \"color:blue\",\n              children: errors.stock\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"optimization-result\",\n        children: response ? /*#__PURE__*/_jsxDEV(Polar, {\n          success: response.success,\n          data: response.weights,\n          tickers: response.tickers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Optimize, \"/zA6PMREE4dHMYJLKZWZ35N814I=\");\n\n_c2 = Optimize;\nexport default Optimize;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextField\");\n$RefreshReg$(_c2, \"Optimize\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/portfolio/src/pages/Optimize.js"],"names":["React","useState","Formik","Form","Field","validateYupSchema","axios","Checkbox","Polar","Header","TextField","field","form","touched","error","props","validateTarget","value","Optimize","response","setReponse","stock","target","values","payload","stocks","defaults","headers","post","then","console","log","data","catch","errors","length","success","weights","tickers"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { Formik, Form,Field, validateYupSchema} from 'formik';\nimport axios from 'axios';\nimport Checkbox from '../components/Checkbox';\nimport Polar from '../components/Polar';\nimport Header from '../components/Header' ;\n\nfunction TextField({field,form:{touched,error},...props}) {\n    return(\n        <>\n       \n            <label>Enter your Gain expectation</label>\n            <input\n             id=\"amount\" \n             {...field}\n             {...props}\n             />\n       </>\n    );  \n}\nfunction validateTarget(value) {\n    let error;\n    if (!value || value < 1.0) {\n      error = 'Please add your target expectation. Target Expectation must be greater than 1%';\n    }\n    return error;\n  }\n  \nconst Optimize = () => {\n    const [response,setReponse] = useState();\n    return(\n        <>\n        <Header/>\n    <h1>Select Investment Stock</h1>\n\n  <div className=\"optimization-container\">\n    <Formik\n      initialValues={{\n        stock: [],\n        target:''\n      }}\n      onSubmit={async (values) => {\n        var payload = {\n            stocks: values.stock,\n            target: values.target/100\n    };\n\n    axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n    axios.post('http://localhost:8000/portfolio/optimize', payload)\n      .then(function (response) {\n        console.log(response);\n        setReponse(response.data);\n    })\n    .catch(function (error) {\n        console.log(error);\n    });\n      }}\n\n      validate={values=>{\n          let errors = {};\n          if(values.stock.length <2){\n              errors.stock =\"Select at least 2 Stocks\"\n          }\n          return errors;\n      }}\n      \n    >\n      {({ values,errors }) => (\n        \n        <Form>\n            <div class=\"optimization-container\">\n                <Field type=\"checkbox\" \n                    name=\"stock\"\n                    value=\"GOOGL\"\n                    image=\"google.svg\"\n                    label=\"Google\"\n                    component={Checkbox}\n                />\n                <Field type=\"checkbox\" \n                    name=\"stock\"\n                    value=\"TSLA\"\n                    image=\"tesla.svg\"\n                    label=\"Tesla\"\n                    component={Checkbox}\n                />\n                <Field type=\"checkbox\" \n                    name=\"stock\"\n                    value=\"AAPL\"\n                    image=\"apple.svg\"\n                    label=\"Apple\"\n                    component={Checkbox}\n                />\n                <Field type=\"checkbox\" \n                name=\"stock\"\n                value=\"KO\"\n                image=\"cocacola.svg\"\n                label=\"CocaCola\"\n                component={Checkbox}\n            />\n            <Field type=\"checkbox\" \n                    name=\"stock\"\n                    value=\"FB\"\n                    image=\"facebook.svg\"\n                    label=\"Facebook\"\n                    component={Checkbox}\n                />\n            <Field type=\"checkbox\" \n                    name=\"stock\"\n                    value=\"SPG\"\n                    image=\"SPG.svg\"\n                    label=\"Simon Property\"\n                    component={Checkbox}\n                />\n            <Field type=\"checkbox\" \n                    name=\"stock\"\n                    value=\"NKE\"\n                    image=\"nike.svg\"\n                    label=\"Nike\"\n                    component={Checkbox}\n                />\n            <Field type=\"checkbox\" \n                    name=\"stock\"\n                    value=\"NFLX\"\n                    image=\"netflix.svg\"\n                    label=\"Netflix\"\n                    component={Checkbox}\n                />  \n\n            <Field type=\"checkbox\" \n                    name=\"stock\"\n                    value=\"WWE\"\n                    image=\"wwe.svg\"\n                    label=\"World Wrestling\"\n                    component={Checkbox}\n                />\n\n            <Field type=\"checkbox\" \n                    name=\"stock\"\n                    value=\"IBM\"\n                    image=\"ibm.svg\"\n                    label=\"IBM\"\n                    component={Checkbox}\n                />\n            </div>\n            <h1> Gain Expectation</h1>\n            <div class=\"container\">\n                <div class=\"containeritems\">\n                    <Field type=\"number\"\n                     name=\"target\" \n                     component={TextField} \n                     validate={validateTarget}\n                    />\n                    <button type=\"submit\" class=\"hero-btn red-btn\">Optimizer</button>\n                </div>\n                {errors.target && <div style=\"color:blue\" >{errors.target}</div>}\n                <br/>\n                {errors.stock && <div style=\"color:blue\" >{errors.stock}</div>}\n\n            </div>\n        </Form>\n      )}\n    </Formik>\n    <div class=\"optimization-result\">\n        {response ? <Polar \n                        success={response.success}\n                         data = {response.weights}\n                         tickers={response.tickers}\n                        />: \n            null}\n    </div>\n  </div>\n\n    \n  </>\n    );\n}\n    \n\nexport default Optimize;"]},"metadata":{},"sourceType":"module"}